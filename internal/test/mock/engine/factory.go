// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/engine/factory.go
//
// Generated by this command:
//
//	mockgen -source=./internal/engine/factory.go -destination=./test/mock/internal/engine/factory.go
//

// Package mock_engine is a generated GoMock package.
package mock_engine

import (
	reflect "reflect"

	http "github.com/ymatsukawa/jak/internal/http"
	rule "github.com/ymatsukawa/jak/internal/rule"
	gomock "go.uber.org/mock/gomock"
)

// MockFactory is a mock of Factory interface.
type MockFactory struct {
	ctrl     *gomock.Controller
	recorder *MockFactoryMockRecorder
	isgomock struct{}
}

// MockFactoryMockRecorder is the mock recorder for MockFactory.
type MockFactoryMockRecorder struct {
	mock *MockFactory
}

// NewMockFactory creates a new mock instance.
func NewMockFactory(ctrl *gomock.Controller) *MockFactory {
	mock := &MockFactory{ctrl: ctrl}
	mock.recorder = &MockFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFactory) EXPECT() *MockFactoryMockRecorder {
	return m.recorder
}

// CreateFromConfig mocks base method.
func (m *MockFactory) CreateFromConfig(config *rule.Config, request *rule.Request) (*http.Request, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFromConfig", config, request)
	ret0, _ := ret[0].(*http.Request)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateFromConfig indicates an expected call of CreateFromConfig.
func (mr *MockFactoryMockRecorder) CreateFromConfig(config, request any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFromConfig", reflect.TypeOf((*MockFactory)(nil).CreateFromConfig), config, request)
}

// CreateSimple mocks base method.
func (m *MockFactory) CreateSimple(url, method, header, body string) (*http.Request, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSimple", url, method, header, body)
	ret0, _ := ret[0].(*http.Request)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateSimple indicates an expected call of CreateSimple.
func (mr *MockFactoryMockRecorder) CreateSimple(url, method, header, body any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSimple", reflect.TypeOf((*MockFactory)(nil).CreateSimple), url, method, header, body)
}
